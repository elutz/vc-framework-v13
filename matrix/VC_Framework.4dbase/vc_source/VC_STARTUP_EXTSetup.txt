//%attributes = {"lang":"en","invisible":true} comment added and reserved by 4D.
// --[HEADERSTART]-------------------------------------
// User name (OS): Joshua Fletcher
// Date and time: 04/18/14, 11:51:43
// ----------------------------------------------------
// Description:
//   Set up the external database.
//
// --[HEADEREND]---------------------------------------
C_LONGINT($0;$error_l)

C_TEXT($externalDataFolderName_t;$externalDataFolderPath_t;$externalDataFile_t)
C_TEXT($statement_t)

$externalDataFolderName_t:="vc_data"
$externalDataFolderPath_t:=Get 4D folder(Database Folder ;*)+$externalDataFolderName_t
$externalDataFile_t:="VC_Data"

// Path to external database to store metadata.
C_TEXT(<>VC_DataFile_t)
<>VC_DataFile_t:=$externalDataFolderPath_t+Folder separator +$externalDataFile_t


If (Test path name($externalDataFolderPath_t)#Is a folder )
CREATE FOLDER($externalDataFolderPath_t)
End if 


If (Test path name(<>VC_DataFile_t+".4db")#Is a document )

// Create the database.
$statement_t:="CREATE DATABASE IF NOT EXISTS DATAFILE '"+<>VC_DataFile_t+"';"

UTIL_ERR_HandlerInstall 
Begin SQL
EXECUTE IMMEDIATE :$statement_t;
End SQL
$error_l:=UTIL_ERR_HandlerRemove 


// Connect to external database.
If ($error_l=0)
$error_l:=VC_EXT_Open 
End if 


// Create preferences table.
If ($error_l=0)
UTIL_ERR_HandlerInstall 
Begin SQL
CREATE TABLE IF NOT EXISTS VC_Prefs
(
   ID UUID NOT NULL UNIQUE AUTO_GENERATE,
   prefName VARCHAR NOT NULL UNIQUE,
   prefValue VARCHAR NOT NULL
);
End SQL
$error_l:=UTIL_ERR_HandlerRemove 
End if 


// Create table for tracking methods.
If ($error_l=0)
UTIL_ERR_HandlerInstall 
Begin SQL
CREATE TABLE IF NOT EXISTS VC_Methods
(
   ID UUID NOT NULL UNIQUE AUTO_GENERATE,
   methodPath VARCHAR NOT NULL UNIQUE,
   action VARCHAR,
   state VARCHAR NOT NULL
);
End SQL
$error_l:=UTIL_ERR_HandlerRemove 
End if 

// Create logging table for invalid paths.
If ($error_l=0)
UTIL_ERR_HandlerInstall 
Begin SQL
CREATE TABLE IF NOT EXISTS VC_BadPathLog
(
   ID UUID NOT NULL UNIQUE AUTO_GENERATE,
   methodPath VARCHAR NOT NULL UNIQUE,
   pathType INT NOT NULL,
   tableName VARCHAR,
   objectName VARCHAR,
   formObjectName VARCHAR,
   tableNameInvalid BOOLEAN NOT NULL,
   objectNameInvalid BOOLEAN NOT NULL,
   formObjectNameInvalid BOOLEAN NOT NULL,
   userWarned BOOLEAN NOT NULL
);
End SQL
$error_l:=UTIL_ERR_HandlerRemove 
End if 


If ($error_l=0)
// Close external database.
$error_l:=VC_EXT_Close 
Else 
UTIL_ERR_ErrorMethod_t:=Current method name
// Still close the external database if another problem
// occurred but don't overwrite the error code.
VC_EXT_CloseIfError 
End if 


// Set the initial stamp value, but don't overwrite if it already exists.
If ($error_l=0)
$error_l:=VC_EXT_PrefSet (<>VC_StampLabel_t;"0";False)
End if 

End if 


$0:=$error_l
